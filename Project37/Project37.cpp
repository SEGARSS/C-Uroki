//Прототипы функций. Прототип функции что это. Прототип функции пример. C++ для начинающих. Урок #36

#include<iostream>
using namespace std;

/*Пример прототипа. Для чего нужны прототипы. Например, мы создали функцию*/ 
void foo()
{
	cout << "Я функция, меня вызвали! " << endl;
}
/*и хотим её использовать в цикле*/
void main()
{
	setlocale(LC_ALL, "Ru");
	foo();

}
/*Так как, мы функцию foo объявиле в начале кода, ну или выше цикла(функции void main()) то у нас всё будет рабоать.
А если сделать вот так - */
void main()
{
	setlocale(LC_ALL, "Ru");
	foo();

}
void foo()
{
	cout << "Я функция, меня вызвали! " << endl;
}
/*То компелятор выдаст ошибку, он не увидит функцию foo и не сможет её реализовать в фукции void main().
Поэтому можно написать прототип. Пример - */
void foo();
void main()
{
	setlocale(LC_ALL, "Ru");
	foo();

}
void foo()
{
	cout << "Я функция, меня вызвали! " << endl;
}
/*Таким образом, в начале кода мы написали прототип функции - void foo(); и не важно где мы объявили саму функцию 
foo, она будет работать. Но, если протатип написать тоже ниже, - вот так - */
void main()
{
	setlocale(LC_ALL, "Ru");
	foo();

}
void foo();
void foo()
{
	cout << "Я функция, меня вызвали! " << endl;
}
/*То не будет работаь, нужно поверх в начале кода прописывать.*/

/*Итог, это можно использовать вот как. Гдето нужно что с определёнными функциями работала та или инная функция, 
а гдето нужно что с маго начала данноя функция действовала везде.*/

