//Динамический массив с++ пример. Создание, заполнение, удаление, размер динамического массива. #55

#include<iostream>
#include<string>
using namespace std;

void main()
{
	setlocale(LC_ALL, "ru");

	int size = 0;
	cout << "Введите размер массива: ";
	cin >> size;
	int *arr = new int[size];

	for (int i = 0; i < size; i++)
	{
		arr[i] = rand() % 10;
	}

	for (int i = 0; i < size; i++)
	{
		cout << arr[i] << "\t";
		cout << arr + i << endl;
	}
	delete [] arr;
}
/*Работая с динамическим массивом, мы можем объявлять его не приминяя константу. Мы применяем ему
вот такое выражение int *arr = new int[size]; как для примера. Также, не забываем за собой подчищать мусор,
сразу прописываем delete [] arr;. И начинаем работать.
Также, мы можем выйти за грани массива. К примеру масив на 5 элементов, а обратились к 6му элементу, и то что нам
покаже, это уже совсем не масив, какойто элемент лежащий в ячейке памяти, с непонятным функционалом.
Тобижь надо тоже быть окуратней, за пределы масива не выходить, работать в том интервале, который объявляем.
Для примера как не надо делать.
int size = 5;
for (int i = 0; i <= size; i++) - главная ошибка тут.
	{
		cout << arr[i] << "\t";
		cout << arr + i << endl;
	}
	delete [] arr;
Вданной строчке кода, for (int i = 0; i <= size; i++) вместо i < size мы указали i <= size, это приведёт
что мы выйдем за пределы масива, и в лучшем случаи получим ошибку, в худшем, данные с которыми не сможем работать.
А всё почему? из за знака равно, он нам покажет лишний элемент, тот элемент на котором i будет равен массиву, 
то что нам не нужно.
*/