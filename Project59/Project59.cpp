//Двумерный динамический массив c++ пример. Создание, заполнение, удаление. Динамические массивы. #56
#include<iostream>
using namespace std;

void main()
{
	setlocale(LC_ALL, "Ru");
	// Раздел создания двухмерного динамического массива.
	int rows;
	int cols;

	cout << "Введите данные размера двухмерного динамического массива: " << endl;
	cout << "Введите количество строк: ";
	cin >> rows;
	cout << "Введите количество столбцов: ";
	cin >> cols;

	int** arr = new int* [rows];

	for (int i = 0; i < rows; i++)
	{
		arr[i] = new int[cols];
	}
	
	//Заполнения двухмерного динамического массива данными.
	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			arr[i][j] = rand() % 20;
		}
	}
	
	//Вывод данных в терминал.
	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			arr[i][j] = rand() % 20;
			cout << arr[i][j] << "\t";
		}
		cout << endl;
	}
	
	//Раздел удаления двухмерного динамического массива. (чистка памяти).
	for (int i = 0; i < rows; i++)
	{
		delete[] arr[i];
	}
	delete[] arr;
}

/*Принцип действия двухмерного динамического массива. Мы создаём одномерный масив, и в его элементах будут лежать
сылки на такиеже одномерные массивы. Тобижь создаём int** arr = new int* [rows]; где указываем ему количество строчек.
и в каждом его элементе будут ссылки на одномерные масивы, и их столбики(размер) тоже прописываем cols.
Очищащать такой мосив просто командой delete[] arr; не выйде. Так мы только удалим ссылки на одномерные массивы,
а сами одномерные не затронем. Поэтому сначала надо запустить цикл удаления, а потом уже delete[] arr;.*/